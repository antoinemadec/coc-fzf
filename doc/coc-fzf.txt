*coc-fzf.txt*  fzf :heart: coc.nvim

===============================================================================
Contents ~

 1. Introduction                            |coc-fzf-introduction|
 2. Rationale                               |coc-fzf-rationale|
 3. Installation                            |coc-fzf-installation|
 4. Commands                                |coc-fzf-commands|
  4.1. Original Sources                     |coc-fzf-original-sources|
  4.2. Wrapper Sources                      |coc-fzf-wrapper-sources|
 5. Options                                 |coc-fzf-options|
 6. Vimrc Example                           |coc-fzf-vimrc-example|
 7. FAQ                                     |coc-fzf-faq|
 8. License                                 |coc-fzf-license|
 9. References                              |coc-fzf-references|

===============================================================================
                                                         *coc-fzf-introduction*
Introduction ~

Use FZF [1] instead of coc.nvim [2] built-in fuzzy finder.

  Image: (see reference [3])

===============================================================================
                                                            *coc-fzf-rationale*
Rationale ~

This plugin uses FZF [1] fuzzy finder in place of Coc [2]'s built-in CocList
sources [4] as well as Coc's jumps (definition, reference etc).
It makes the interaction with Coc easier when you are used to FZF.

The main features are:
  - FZF preview
  - FZF bindings for splits and tabs
  - FZF layout (floating windows etc)
  - FZF multi-select to populate the quickfix window

It was inspired by Robert Buhren's functions [5] and coc-denite [6].

===============================================================================
                                                         *coc-fzf-installation*
Installation ~

Make sure to have the following plugins in your **vimrc**:
>
  Plug 'neoclide/coc.nvim', {'branch': 'release'}
  Plug 'junegunn/fzf', {'dir': '~/.fzf','do': './install --all'}
  Plug 'junegunn/fzf.vim' " needed for previews
  Plug 'antoinemadec/coc-fzf'
<
===============================================================================
                                                             *coc-fzf-commands*
Commands ~

| Command                     | List                       | ~
| `:CocFzfList`                 | List all list sources      |
| `:CocFzfList --original-only` | List only original sources |
| `:CocFzfList {source}`        | Run a list source          |
| `:CocFzfListResume`           | Retrieve last list source  |

-------------------------------------------------------------------------------
                                                     *coc-fzf-original-sources*
Original Sources ~

These are the list sources implemented with FZF:

| Source                          | List                                                            | Preview | Multi-select | Vim support | ~
| `actions`                         | Equivalent to :CocList actions                                  | -       | -            | ✅          |
| `commands`                        | Equivalent to :CocList commands                                 | -       | -            | ✅          |
| `diagnostics`                     | Equivalent to :CocList diagnostics                              | ✅      | ✅           | ✅          |
| `diagnostics --current-buf`       | Equivalent to :CocList diagnostics in the current buffer only   | ✅      | ✅           | ✅          |
| `extensions`                      | Equivalent to :CocList extensions                               | -       | -            | ✅          |
| `location`                        | Equivalent to :CocList location. Requires fzf.vim [7]           | ✅      | ✅           | ✅          |
| `outline`                         | Equivalent to :CocList outline, with colors. Requires ctags [8] | -       | ✅           | ✅          |
| `services`                        | Equivalent to :CocList services                                 | -       | -            | ✅          |
| `sources`                         | Equivalent to :CocList sources                                  | -       | -            | ✅          |
| `symbols ({query})`               | Equivalent to :CocList symbols                                  | ✅      | ✅           | ❌          |
| `symbols --kind {kind} ({query})` | Equivalent to :CocList symbols -kind {kind}                     | ✅      | ✅           | ❌          |
| `yank`                            | Equivalent to :CocList yank. Requires coc-yank [9]              | ✅      | ✅           | ✅          |

FZF bindings (default):
  - **ctrl-t**: open in tab
  - **ctrl-x**: open in vertical split
  - **ctrl-s**: open in horizontal split
  - **tab**: multi-select, populate quickfix window
  - **?**: toggle preview window

-------------------------------------------------------------------------------
                                                      *coc-fzf-wrapper-sources*
Wrapper Sources ~

Not every list source is implementable with FZF.
For those sources, `:CocFzfList' acts as a wrapper calling `:CocList'

Wrapper Sources appear with the **[wrapper]** mention when running `:CocFzfList`

===============================================================================
                                                              *coc-fzf-options*
Options ~

| Option                       | Type   | Description                                                    | Default value             | ~
| `g:coc_fzf_preview_toggle_key` | string | Change the key to toggle the preview window                    | `'?'`                       |
| `g:coc_fzf_preview`            | string | Change the preview window position                             | `'up:50%'`                  |
| `g:coc_fzf_opts`               | array  | Pass additional parameters to fzf, e.g. "['--layout=reverse']" | `['--layout=reverse-list']` |

===============================================================================
                                                        *coc-fzf-vimrc-example*
Vimrc Example ~
>
  " allow to scroll in the preview
  set mouse=a

  " mappings
  nnoremap <silent> <space><space> :<C-u>CocFzfList<CR>
  nnoremap <silent> <space>a       :<C-u>CocFzfList diagnostics<CR>
  nnoremap <silent> <space>b       :<C-u>CocFzfList diagnostics --current-buf<CR>
  nnoremap <silent> <space>c       :<C-u>CocFzfList commands<CR>
  nnoremap <silent> <space>e       :<C-u>CocFzfList extensions<CR>
  nnoremap <silent> <space>l       :<C-u>CocFzfList location<CR>
  nnoremap <silent> <space>o       :<C-u>CocFzfList outline<CR>
  nnoremap <silent> <space>s       :<C-u>CocFzfList symbols<CR>
  nnoremap <silent> <space>p       :<C-u>CocFzfListResume<CR>
<
===============================================================================
                                                                  *coc-fzf-faq*
FAQ ~

**Q**: How to get the FZF floating window?
**A**: You can look at FZF Vim integration [10]:
>
  let g:fzf_layout = { 'window': { 'width': 0.9, 'height': 0.6 } }
<
**Q**: How to see references, definitions etc in a FZF window?
**A**: It is already supported by default, just make sure to have the default coc mappings:
>
  nmap <silent> gd <Plug>(coc-definition)
  nmap <silent> gy <Plug>(coc-type-definition)
  nmap <silent> gi <Plug>(coc-implementation)
  nmap <silent> gr <Plug>(coc-references)
<
**Q**: How to get colors in previews?
**A**: Install bat [11].

**Q**: CocFzf looks different from my other Fzf commands. How to make it the same?
**A**: By default, CocFzf tries to mimic CocList. Here is how to change this:
>
  let g:coc_fzf_preview = ''
  let g:coc_fzf_opts = []
<
===============================================================================
                                                              *coc-fzf-license*
License ~

MIT

===============================================================================
                                                           *coc-fzf-references*
References ~

[1] https://github.com/junegunn/fzf
[2] https://github.com/neoclide/coc.nvim
[3] https://raw.githubusercontent.com/antoinemadec/gif/master/coc_fzf.gif
[4] https://github.com/neoclide/coc.nvim/wiki/Using-coc-list#builtin-list-sources
[5] https://gist.github.com/RobertBuhren/02e05506255c667c0038ce74ee1cef96
[6] https://github.com/neoclide/coc-denite
[7] https://github.com/junegunn/fzf.vim
[8] https://github.com/universal-ctags/ctags
[9] https://github.com/neoclide/coc-yank
[10] https://github.com/junegunn/fzf/blob/master/README-VIM.md
[11] https://github.com/sharkdp/bat

vim: ft=help
